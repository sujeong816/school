Chap 01
시험 문제로 안 나올 거 같아서 패스

Chap 02
1. AVD와 키패드의 명칭을 정리하시오


2. 다음 각 항목의 단축키는 무엇인가?
1) AVD 화면을 가로 및 세로로 변경

2) XML 또는 코틀린 코드의 자동 완성

3) 자동 임포트

4) 선택된 영역의 주석

5) 소스코드의 자동 정렬


3. 안드로이드 프로그래밍을 하다 보면 코딩의 오류와 경고가 발생한다. 이 두 가지에 대해 설명하시오


4. 프로젝트에서 사용하는 리소스가 저장되는 /res 폴더 아래의 하위 폴더와 파일의 용도를 설명하시오


5. 완성된 앱이 아이스크림 샌드위치(4.0.x) 이상의 스마트폰에서 모두 작동하게 하려면 무엇을 고려해야 하며, 프로젝트를 어떻게 생성해야 하는가?


6. Button에서 사용 가능한 XML 속성에는 어떤 것이 있는지 조사하시오



Chap 03
1. 다음 중 틀린 것을 모두 고르시오
1) 코틀린은 게터와 세터를 반드시 구현해야 한다.
2) 코틀린은 switch()~case문을 지원한다.
3) 코틀린은 null 객체를 사용하는 경우를 잘 보호한다.
4) 코틀린은 데이터 형식을 선언하지 않고도 변수를 선언할 수 있다.


2. 코틀린에서 사용되는 데이터 형식 중에서 정수형에 대해 설명하시오



3. 다음은 점수에 따라서 A~F로 학점을 나누는 프로그램이다. 빈 칸 채우기
fun main() {
    var count : Int = 85

    ---1--- {
        in 90 .. 100 -> println("A학점")
        in 80 .. 89 -> println("B학점")
        in 70 .. 79 -> println("C학점")
        in 60 .. 69 -> println("D학점")
        ---2---
    }
}


4. 다음과 같이 3*3 이차원 배열을 선언하고, for문을 이용하여 값을 대입하는 코드를 작성하시오
이차원 배열: array[3][3]
  100     110     120
[0][0]  [0][1]   [0][2]
  130     140     150
[1][0]  [1][1]   [1][2]
  160     170     180
[2][0]  [2][1]   [2][2]


5. 다음 코드가 출력하는 값을 차례로 쓰시오
var data : Int = 100

fun func1(para: Int) {
    var data : Int = para
    data++
    println(data)
}

fun main() {
    var data : Int = 200
    data++
    println(data)
    func1(data)
}


6. 다음은 객체지향과 관련된 내용이다. 틀린 것을 모두 고르고 그 이유를 설명하시오
1) 클래스를 정의할 때 생성자는 반드시 명시적으로 정의해야 한다.
2) 메소드 오버로딩은 한 클래스 내에서 메소드의 이름이 같아도 파라미터의 개수가 다르면 같은 이름의 메소드를 여러 개 선언할 수 있는 것을 말한다.
3) 정적 필드는 static 예약어를 사용한다.
4) 정적 메소드는 인스턴스를 생성하지 않고도 사용이 가능하다.
5) 코틀린은 클래스의 다중 상속이 가능하지만 되도록 사용하지 않는 것이 좋다.
6) 추상 클래스는 클래스 이름 앞에 abstract를 붙여서 정의한다.
7) 추상 메소드를 포함하는 클래스는 반드시 추상 클래스로 정의해야 한다.
8) 추상 메소드도 필요하다면 메소드 본체를 만들고 메소드에서 작동할 내용을 코딩할 수 있다.
9) 인터페이스를 사용할 때는 interface 예약어를 사용한다.


7. 예제 3-7의 Car 클래스를 상속받은 Truck 클래스를 다음 조건에 맞게 생성하시오.
-배기량 변수 cc를 추가한다. (정수형)
-트럭의 생산 연도 상수 필드 YEAR를 선언하고, 값을 2023으로 한다.
-배기량 값을 파라미터로 받는 생성자를 추가한다.
-upSpeed(int) 메소드를 최대 속도 150으로 오버라이딩한다.


8. 다음은 클래스와 제네릭스를 활용하여 10+20+30의 합을 구하는 코드이다. 빈칸을 채우시오
class MyClass(value: int) {
    var value : Int = 0
    init(
        this.value = value
    )
}

fun main() {
    var c1 = MyClass(10)
    var c2 = MyClass(20)
    var c3 = MyClass(30)

    ---1---

    myList.add(c1)
    myList.add(c2)
    myList.add(c3)
    var hap = 0

    for(i in 0 until myList.size) {
        ---2---
    }
    println(hap)
}

Chap 04
1. 레이아웃의 종류를 나열하고 계층도를 그리시오


2. layout_width와 layout_height 속성값으로 match_parent를 사용하려면 안드로이드 버전이 얼마 이상이어야 하는가?


3. 텍스트뷰의 XML 속성 및 각 속성과 관련된 메소드를 표로 정리하시오


4. 버튼에 클릭과 터치 외에 어떤 이벤트가 가능한지 2개 이상을 조사하고, 요약의 7번처럼 사용법의 예를 제시하시오


5. 안드로이드에서 색상을 지정하는 속성값은 #RRGGBB로 설정한다. 이에 대응하는 android, graphics, Color 클래스의 상수 필드를 조사하시오(예를 들어 0xffff0000은 RED에 대응된다)




6. 다음 그림은 리니어레이아웃에 버튼 2개가 들어 있는 상태이다. 그림과 같이 여백을 설정하기 위해 리니어레이아웃과 버튼 1에 각각 1개씩의 XML 속성 및 값을 설정하시오




7. 체크박스를 선택할 때마다 버튼의 속성이 설정되도록 프로젝트를 작성하시오.




8. 에디트텍스트의 키가 눌릴 때마다 바뀐 글자가 토스트 메시지로 나오도록 프로젝트를 작성하시오.







Chap 05
1. 레이아웃의 다섯 가지 종류에 대해 간략히 설명하시오


2. gravity 속성과 layout_gravity 속성의 차이를 간략히 설명하시오.


3. 렐러티브레이아웃에서 위젯의 배치를 위해 설정할 수 있는 XML 속성에 대해 설명하시오


4. 오른쪽 화면을 xml 파일로 만드시오. 단, 리니어레이아웃만 사용하고 각 레이아웃의 색상을 다르게 설정한다.




5. 오른쪽 화면을 xml 파일로 만드시오. 단, 렐러티브레이아웃에 버튼을 사용하고 중앙에 있는 <기준 위젯>의 상대적인 위치로 다른 위젯을 배치한다. <기준 위젯>의 크기는 가로세로 150dp이다.




6. 다음 화면을 프로젝트로 완성하시오. 리니어레이아웃을 이용하여 xml 코드로 만들고, 각 레이아웃을 클릭하면 레이아웃의 너비와 높이가 토스트 메시지로 출력되도록 코틀린으로 프로그래밍한다. 안쪽 레이아웃은 모두 정사각형이며, 크기는 안쪽 레이아웃부터 50dp, 150dp, 250dp이다. 각레이아웃의 색상을 다르게 한다.




7. 다음 화면을 프로젝트로 완성하시오. xml 파일 없이 코틀린 코드만 이용하고 각 레이아웃의 색상을 다르게 한다.